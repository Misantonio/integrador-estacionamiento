
apiVersion: v1
data:
  nginx.conf: |-
    user nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
      worker_connections  10000;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        access_log  /var/log/nginx/access.log;

        sendfile        on;
        keepalive_timeout  65;

        # Donde esta expuesta el api
        upstream api {
            server 127.0.0.1:5000;
        }

        # redorect to https
        server {
          server_name _;
          listen 80;

          #return 301 https://$host$request_uri;

          location / {
            return 200 'OK';
            default_type text/plain;
          }

          location /api {
              fastcgi_read_timeout    240;
              proxy_read_timeout      3600;
              proxy_set_header        Host $host;
              proxy_set_header        X-Real-IP $remote_addr;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header        X-Forwarded-Proto $scheme;
              proxy_set_header        X-Forwarded-Host $http_host;
              proxy_pass              http://api;
              #proxy_redirect          http:// https://;
          }
        }
    }
kind: ConfigMap
metadata:
  name: nginx-api


---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    name: parking-prod-test
  name: parking-prod-test
spec:
  minReadySeconds: 60
  replicas: 1
  selector:
    matchLabels:
      name: proxy-parking-test
  template:
    metadata:
      labels:
        name: proxy-parking-test
    spec:
      containers:
      - image: nginx
        imagePullPolicy: IfNotPresent
        name: nginx-proxy
        ports:
        - containerPort: 80
          name: proxy-http
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-proxy-config
          subPath: nginx.conf
      - args:
        - gunicorn
        - -w
        - "1"
        - --chdir
        - /app
        - manage:app
        - -b
        - :5000
        - --name
        - app
        - --log-file=uni.log
        image: gcr.io/midyear-task-234404/api:v1.1.0
        imagePullPolicy: IfNotPresent
        name: api
      terminationGracePeriodSeconds: 60
      volumes:
      - configMap:
          defaultMode: 420
          name: nginx-api
        name: nginx-proxy-config

---

apiVersion: v1
kind: Service
metadata:
  labels:
    name: neg-proxy-parking
  name: neg-proxy-parking
  annotations:
    cloud.google.com/neg: '{"ingress": true}' # Creates an NEG after an Ingress is created
spec:
  type: LoadBalancer
  selector:
    name: proxy-parking-test
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
